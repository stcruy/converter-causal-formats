var ConvertCausalFormats=function(t){var i={};function e(a){if(i[a])return i[a].exports;var o=i[a]={i:a,l:!1,exports:{}};return t[a].call(o.exports,o,o.exports,e),o.l=!0,o.exports}return e.m=t,e.c=i,e.d=function(t,i,a){e.o(t,i)||Object.defineProperty(t,i,{enumerable:!0,get:a})},e.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},e.t=function(t,i){if(1&i&&(t=e(t)),8&i)return t;if(4&i&&"object"==typeof t&&t&&t.__esModule)return t;var a=Object.create(null);if(e.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:t}),2&i&&"string"!=typeof t)for(var o in t)e.d(a,o,function(i){return t[i]}.bind(null,o));return a},e.n=function(t){var i=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(i,"a",i),i},e.o=function(t,i){return Object.prototype.hasOwnProperty.call(t,i)},e.p="",e(e.s=1)}([function(t,i){function e(t){return t.includes("http://purl.obolibrary.org/obo")?t.includes("http://purl.obolibrary.org/obo/GO_")?"go":t.includes("http://purl.obolibrary.org/obo/MI_")?"psi-mi":t.split("/").pop().split("_").slice(-2)[0]:t.includes("NCBITAXON")?"taxid":t.includes("pubmed")?"pubmed":t.includes("complexportal")?"complexportal":t.split(".").slice(1)[0]}function a(t){return t.includes("http://purl.obolibrary.org/obo")?t.includes("http://purl.obolibrary.org/obo/GO_")?'"GO:'+t.split("_").pop()+'"':t.includes("http://purl.obolibrary.org/obo/MI_")?'"MI:'+t.split("_").pop()+'"':t.split("/").pop().split("_").pop():t.includes("NCBITAXON")?t.split("/").pop():t.includes("pubmed")?t.split("/").pop():(t.includes("complexportal"),t.split("/").pop())}t.exports={getDbName:e,getId:a,getDbnameAndId:function(t){return e(t)+":"+a(t)},setValue:function t(i,e,a){if(e){var s=Array.isArray(i)?i:i.split(".");if(s.length>1){var n=a[s[0]];if(!a.hasOwnProperty(s[0]))if(o.includes(s[0]))a[s[0]]=[],n=a[s[0]];else if(Array.isArray(a))if(!a.length>0){var c={};c[s[0]]={},a.push(c),n=a[0][s[0]]}else void 0===a[0][s[0]]&&(a[0][s[0]]={}),n=a[0][s[0]];else a[s[0]]={},n=a[s[0]];return t(s.slice(1),e,n)}if(Array.isArray(a))if(!a.length>0){var r={};r[s[0]]={},r[s[0]].identifier=e.id,r[s[0]].name=e.str,a.push(r)}else a[0][s[0]]={},a[0][s[0]].identifier=e.id,a[0][s[0]].name=e.str;else a[s[0]]={},e.id&&(a[s[0]].identifier=e.id),e.str&&(a[s[0]].name=e.str);return!0}}};var o=["biologicalModifications","experimentalSetups","evidences","references"]},function(t,i,e){var a=e(2),o=e(3);t.exports=class{constructor(t,i,e){this.choice=t,this.input=i,this.output=e}doConversion(){switch(this.choice){case"flatjson2causaljson":return(t=new o(this.output)).exportCausalJson(this.input),t.causalJson;case"causaljson2mitab":return(i=new a(this.output)).fillMitab(this.input),i.mitab;case"flatjson2mitab":var t,i;return(t=new o([])).exportCausalJson(this.input),(i=new a(this.output)).fillMitab(t.causalJson),i.mitab;default:alert("Unknown conversion type")}}}},function(t,i,e){var{getDbName:a,getId:o,getDbnameAndId:s}=e(0);t.exports=class{constructor(t){this.mitab=t||""}fillMitab(t){var i,e;if(this.mitab=(i=this.mitab,e="#ID(s) interactor A\tID(s) interactor B\tAlt. ID(s) interactor A\tAlt. ID(s) interactor B\tAlias(es) interactor A\tAlias(es) interactor B\tInteraction detection method(s)\tPublication 1st author(s)\tPublication Identifier(s)\tTaxid interactor A\tTaxid interactor B\tInteraction type(s)\tSource database(s)\tInteraction identifier(s)\tConfidence value(s)\tExpansion method(s)\tBiological role(s) interactor A\tBiological role(s) interactor B\tExperimental role(s) interactor A\tExperimental role(s) interactor B\tType(s) interactor A\tType(s) interactor B\tXref(s) interactor A\tXref(s) interactor B\tInteraction Xref(s)\tAnnotation(s) interactor A\tAnnotation(s) interactor B\tInteraction annotation(s)\tHost organism(s)\tInteraction parameter(s)\tCreation date\tUpdate date\tChecksum(s) interactor A\tChecksum(s) interactor B\tInteraction Checksum(s)\tNegative\tFeature(s) interactor A\tFeature(s) interactor B\tStoichiometry(s) interactor A\tStoichiometry(s) interactor B\tIdentification method participant A\tIdentification method participant B\tBiological effect(s) interactor A\tBiological effect(s) interactor B\tCausal regulatory mechanism\tCausal statement\n",i.includes(e)?i:i+=e),t.causalStatement){this.mitab=this.mitab+s(t.causalStatement[0].source.identifier)+"\t",this.mitab=this.mitab+s(t.causalStatement[0].target.identifier)+"\t",this.mitab=this.mitab+"-\t-\t",this.mitab=this.mitab+a(t.causalStatement[0].source.identifier)+":"+t.causalStatement[0].source.name+"(synonym)\t",this.mitab=this.mitab+a(t.causalStatement[0].target.identifier)+":"+t.causalStatement[0].target.name+"(synonym)\t",this.mitab=this.mitab+'psi-mi:"MI:0364"(inferred by curator)\t',this.mitab=this.mitab+"-\t";for(var o="",n=0;n<t.causalStatement[0].references.length;n++)o=o+s(t.causalStatement[0].references[n]["reference"+n].identifier)+"|";this.mitab=this.mitab+o.slice(0,-1)+"\t","entityTaxon"in t.causalStatement[0].source?this.mitab=this.mitab+s(t.causalStatement[0].source.entityTaxon.identifier)+"("+t.causalStatement[0].source.entityTaxon.name+")\t":this.mitab=this.mitab+"-\t","entityTaxon"in t.causalStatement[0].target?this.mitab=this.mitab+s(t.causalStatement[0].target.entityTaxon.identifier)+"("+t.causalStatement[0].target.entityTaxon.name+")\t":this.mitab=this.mitab+"-\t",this.mitab=this.mitab+"-\t",this.mitab=this.mitab+"-\t-\t-\t-\t",this.mitab=this.mitab+'psi-mi:"MI:2274"(regulator)\t',this.mitab=this.mitab+'psi-mi:"MI:2275"(regulator target)\t',this.mitab=this.mitab+'psi-mi:"MI:0499"(unspecified role)\t',this.mitab=this.mitab+'psi-mi:"MI:0499"(unspecified role)\t',"biologicalType"in t.causalStatement[0].source?this.mitab=this.mitab+s(t.causalStatement[0].source.biologicalType.identifier)+"("+t.causalStatement[0].source.biologicalType.name+")\t":this.mitab=this.mitab+"-\t","biologicalType"in t.causalStatement[0].target?this.mitab=this.mitab+s(t.causalStatement[0].target.biologicalType.identifier)+"("+t.causalStatement[0].target.biologicalType.name+")\t":this.mitab=this.mitab+"-\t","entityCompartment"in t.causalStatement[0].source?this.mitab=this.mitab+s(t.causalStatement[0].source.entityCompartment.identifier)+"(cellular component)\t":this.mitab=this.mitab+"-\t","entityCompartment"in t.causalStatement[0].target?this.mitab=this.mitab+s(t.causalStatement[0].target.entityCompartment.identifier)+"(cellular component)\t":this.mitab=this.mitab+"-\t","effectCompartment"in t.causalStatement[0].effect?this.mitab=this.mitab+s(t.causalStatement[0].effect.effectCompartment.identifier)+"(cellular component)\t":this.mitab=this.mitab+"-\t",this.mitab=this.mitab+"-\t",this.mitab=this.mitab+"-\t",this.mitab=this.mitab+"-\t",this.mitab=this.mitab+"-\t",this.mitab=this.mitab+"-\t";var c=new Date,r=(c.getMonth()+1<10?"0":"")+(c.getMonth()+1),l=c.getFullYear()+"/"+r+"/"+c.getDate();if(this.mitab=this.mitab+l+"\t",this.mitab=this.mitab+"-\t",this.mitab=this.mitab+"-\t-\t-\t",this.mitab=this.mitab+"-\t","biologicalModifications"in t.causalStatement[0].source){var m="";for(n=0;n<t.causalStatement[0].source.biologicalModifications.length;n++)"modification"in t.causalStatement[0].source.biologicalModifications[n]["biologicalModification"+n]&&(m+=t.causalStatement[0].source.biologicalModifications[n]["biologicalModification"+n].modification.name),"position"in t.causalStatement[0].source.biologicalModifications[n]["biologicalModification"+n]&&(m=m+":"+t.causalStatement[0].source.biologicalModifications[n]["biologicalModification"+n].position.name+"-"+t.causalStatement[0].source.biologicalModifications[n]["biologicalModification"+n].position.name),"residue"in t.causalStatement[0].source.biologicalModifications[n]["biologicalModification"+n]&&(m=m+"("+t.causalStatement[0].source.biologicalModifications[n]["biologicalModification"+n].residue.name+")"),m+="|";m=m.slice(0,-1),this.mitab=this.mitab+m+"\t"}else this.mitab=this.mitab+"-\t";if("biologicalModifications"in t.causalStatement[0].target){var u="";for(n=0;n<t.causalStatement[0].target.biologicalModifications.length;n++)"modification"in t.causalStatement[0].target.biologicalModifications[n]["biologicalModification"+n]&&(u+=t.causalStatement[0].target.biologicalModifications[n]["biologicalModification"+n].modification.name),"position"in t.causalStatement[0].target.biologicalModifications[n]["biologicalModification"+n]&&(u=u+":"+t.causalStatement[0].target.biologicalModifications[n]["biologicalModification"+n].position.name+"-"+t.causalStatement[0].target.biologicalModifications[n]["biologicalModification"+n].position.name),"residue"in t.causalStatement[0].target.biologicalModifications[n]["biologicalModification"+n]&&(u=u+"("+t.causalStatement[0].target.biologicalModifications[n]["biologicalModification"+n].residue.name+")"),u+="|";u=u.slice(0,-1),this.mitab=this.mitab+u+"\t"}else this.mitab=this.mitab+"-\t";this.mitab=this.mitab+"-\t",this.mitab=this.mitab+"-\t",this.mitab=this.mitab+"-\t",this.mitab=this.mitab+"-\t","biologicalActivity"in t.causalStatement[0].source?this.mitab=this.mitab+s(t.causalStatement[0].source.biologicalActivity.identifier)+"("+t.causalStatement[0].source.biologicalActivity.name+")\t":this.mitab=this.mitab+"-\t","biologicalActivity"in t.causalStatement[0].target?this.mitab=this.mitab+s(t.causalStatement[0].target.biologicalActivity.identifier)+"("+t.causalStatement[0].target.biologicalActivity.name+")\t":this.mitab=this.mitab+"-\t","biologicalMechanism"in t.causalStatement[0].effect?this.mitab=this.mitab+s(t.causalStatement[0].effect.biologicalMechanism.identifier)+"("+t.causalStatement[0].effect.biologicalMechanism.name+")\t":this.mitab=this.mitab+"-\t",this.mitab=this.mitab+s(t.causalStatement[0].effect.identifier)+"("+t.causalStatement[0].effect.name+")\n"}return this.mitab}}},function(t,i,e){var{setValue:a}=e(0);t.exports=class t{constructor(i){this.causalJson={},this.mapping=t.initMapping()}static initMapping(){var t=new Map;return t.set("source",["source"]),t.set("target",["target"]),t.set("effect",["effect"]),t.set("sourceType",["source","biologicalType"]),t.set("sourceActivity",["source","biologicalActivity"]),t.set("sourceTaxon",["source","entityTaxon"]),t.set("sourceModificationMod",["source","biologicalModifications","biologicalModification","modification"]),t.set("sourceModificationModPos",["source","biologicalModifications","biologicalModification","position"]),t.set("sourceModificationModRes",["source","biologicalModifications","biologicalModification","residue"]),t.set("sourceCompartment",["source","entityCompartment"]),t.set("sourceExperiment",["source","experimentalSetups","experimentalSetup"]),t.set("targetType",["target","biologicalType"]),t.set("targetActivity",["target","biologicalActivity"]),t.set("targetTaxon",["target","entityTaxon"]),t.set("targetModificationMod",["target","biologicalModifications","biologicalModification","modification"]),t.set("targetModificationModPos",["target","biologicalModifications","biologicalModification","position"]),t.set("targetModificationModRes",["target","biologicalModifications","biologicalModification","residue"]),t.set("targetCompartment",["target","entityCompartment"]),t.set("targetExperiment",["target","experimentalSetups","experimentalSetup"]),t.set("effectMechanism",["effect","biologicalMechanism"]),t.set("effectTaxon",["effect","effectTaxon"]),t.set("effectCompartment",["effect","effectCompartment"]),t.set("effectCellType",["effect","cellType"]),t.set("effectTissueType",["effect","tissueType"]),t.set("reference",["references","reference"]),t.set("evidence",["evidences","evidence"]),t}exportCausalJson(t){var i={},e="";for(var o in t)if(t.hasOwnProperty(o)){if(!t[o]||!t)return!0;switch(o){case"source":case"target":case"effect":e=this.mapping.get(o)[0],a(e,t[o],i);break;case"targetModificationMod":case"sourceModificationMod":case"sourceModificationModRes":case"targetModificationModRes":case"sourceModificationModPos":case"targetModificationModPos":for(var s of t[o].keys())s in t[o]!=!1&&(e=this.mapping.get(o)[0]+"."+this.mapping.get(o)[1]+"."+this.mapping.get(o)[2]+s+"."+this.mapping.get(o)[3],a(e,t[o][s],i));break;case"reference":case"evidence":for(var n of t[o].keys())e=this.mapping.get(o)[0]+"."+this.mapping.get(o)[1]+n,a(e,t[o][n],i);break;case"targetExperiment":case"sourceExperiment":for(var c of t[o].keys())c in t[o]!=!1&&(e=this.mapping.get(o)[0]+"."+this.mapping.get(o)[1]+"."+this.mapping.get(o)[2]+c,a(e,t[o][c],i));break;default:e=this.mapping.get(o)[0]+"."+this.mapping.get(o)[1],a(e,t[o],i)}}return this.causalJson.causalStatement=[],this.causalJson.causalStatement.push(i),this.causalJson}}}]);